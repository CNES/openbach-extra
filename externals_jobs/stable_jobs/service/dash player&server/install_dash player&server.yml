#   OpenBACH is a generic testbed able to control/configure multiple
#   network/physical entities (under test) and collect data from them. It is
#   composed of an Auditorium (HMIs), a Controller, a Collector and multiple
#   Agents (one for each network entity that wants to be tested).
#
#
#   Copyright Â© 2016 CNES
#
#
#   This file is part of the OpenBACH testbed.
#
#
#   OpenBACH is a free software : you can redistribute it and/or modify it under
#   the terms of the GNU General Public License as published by the Free Software
#   Foundation, either version 3 of the License, or (at your option) any later
#   version.
#
#   This program is distributed in the hope that it will be useful, but WITHOUT
#   ANY WARRANTY, without even the implied warranty of MERCHANTABILITY or FITNESS
#   FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
#   details.
#
#   You should have received a copy of the GNU General Public License along with
#   this program. If not, see http://www.gnu.org/licenses/.
#
#
#
#   @file     install_dash.yml
#   @brief    Playbook that install the Job dash
#   @author   Joaquin MUGUERZA <joaquin.muguerza@toulouse.viveris.com>
#   @author   Francklin SIMO <francklin.simo@viveris.fr>


---

# Install Dash

- name: Create the Dash Job Repository
  file: path=/opt/openbach/agent/jobs/dash_player_server state=directory mode=0755

- name: Install tornado
  pip: name=tornado executable=pip3
  become: yes

- name: Install curl
  apt: name=curl state=present
  become: yes

- name: Install Dash
  copy: src={{ item.file }} dest=/opt/openbach/agent/jobs/dash_player_server/ mode={{ item.mode }}
  with_items:
    - { file: 'dash player&server.help', mode: '0644' }
    - { file: 'dash player&server_rstats_filter.conf', mode: '0644' }
    - { file: 'dash.py', mode: '0755' }
    - { file: 'download_video.sh', mode: '0755' }
    - { file: 'virtualhost_http.conf', mode: '0644' }
    - { file: 'virtualhost_http2.conf', mode: '0644' }



# Install and configure apache2

- name: Init global variables  
  set_fact:
    http_port: 8083
    http2_port: 8084
    ws_port: 8085
    domain: dash.openbach.com
    ServerName_http: http.dash.openbach.com
    ServerName_http2: http2.dash.openbach.com
    cacheable: yes  

- name: Install mod_http2's  dependencies
  apt: name={{ item }} state=present
  with_items:
    - software-properties-common
    - python-software-properties
  become: yes

- name: Add specified repository into sources list
  apt_repository: repo="ppa:ondrej/apache2" state=present update_cache=yes
  become: yes

- name: Install apache2
  apt: name=apache2 state=latest
  become: yes

- name: Install pyOpenSSL
  pip: name=pyopenssl executable=pip2 state=present
  become: yes

- name: Generate an OpenSSL private key with the default values (4096 bits, RSA)
  openssl_privatekey:
    path: /etc/ssl/private/{{ domain }}.pem 
  become: yes  

- name: Generate an OpenSSL Certificate Signing Request
  openssl_csr:
    path: /etc/ssl/certs/{{ domain }}.csr
    privatekey_path: /etc/ssl/private/{{ domain }}.pem
    common_name: "{{ domain }}"
  become: yes

- name: Generate a Self Signed OpenSSL certificate
  openssl_certificate:
    path: /etc/ssl/certs/{{ domain }}.crt
    privatekey_path: /etc/ssl/private/{{ domain }}.pem
    csr_path: /etc/ssl/certs/{{ domain }}.csr
    provider: selfsigned
  become: yes

- name: enabled modules
  apache2_module: name={{ item }} state=present
  with_items:
    - ssl
    - http2
    - proxy
    - proxy_http
    - proxy_wstunnel
  become: yes

- name: apache2 listen on ports {{ http_port }} and  {{ http2_port }}
  lineinfile: 
    path: /etc/apache2/ports.conf
    state: present
    regexp: ^Listen {{ item }} 
    insertafter: '^Listen ' 
    line: Listen {{ item }}
  with_items:
    - "{{ http_port }}"
    - "{{ http2_port }}"
  become: yes

- name: Add http virtual host
  template: src=files/virtualhost_http.conf dest=/etc/apache2/sites-available/{{ ServerName_http }}.conf
  become: yes

- name: Add http2 virtual host
  template: src=files/virtualhost_http2.conf dest=/etc/apache2/sites-available/{{ ServerName_http2 }}.conf
  become: yes

- name: a2ensite {{ ServerName_http }} and {{ ServerName_http2 }}
  command: a2ensite {{ item }}
  with_items:
    - "{{ ServerName_http }}"
    - "{{ ServerName_http2 }}"
  become: yes

- name: Install web files
  openbach_synchronize:
    src: "www/"
    dest: /var/www/{{ domain }}/
    recursive: yes
    delete: yes
    rsync_opts:
      - --filter
      - P vod-dash
  become: yes

- name: Configure main.js
  template: src=main.js.j2 dest=/var/www/{{ domain }}/vod-dash/app/main.js
  become: yes

- name: Download sample videos
  command: /opt/openbach/agent/jobs/dash_player_server/download_video.sh {{ item }} chdir=/var/www/{{ domain }}/vod-dash/
  with_items:
    - "BigBuckBunny 2sec bunny_45652bps"
    - "BigBuckBunny 2sec bunny_334349bps"
    - "BigBuckBunny 2sec bunny_1546902bps"
    - "BigBuckBunny 2sec bunny_4219897bps"
  become: yes

- name: Stop apache2 
  service:
    name: apache2
    state: stopped
  become: yes
  ignore_errors: yes

- name: Prevent apache2 to automatically starting at boot
  command: systemctl disable apache2
  become: yes

